---------------------
Plan File / Bootstrap
---------------------

:Abstract:

    This is the plan file for the Bootstrap phase of [[Iteration X]] -- it will
    be updated regularly as progress is made.

.. contents::   Table of Contents
                :depth: 2
                :backlinks: none

.. plan:: bootstrap


Embedded Interpreter
====================

We will be using PyPy to build our own interpreter called Naaga.

.. tag:: id:1, done, @fijal

  We need to extend PyPy so that it can create a library version of interpreters.
  To start with it should produce ``libnaaga`` on both Linux and OS X.

.. tag:: wip, @fijal

  We need to extend PyPy so that it can create a library version of interpreters.
  To start with it should produce ``libnaaga`` on both Linux and OS X.

.. tag:: needsreview, @fijal

  We need to extend PyPy so that it can create a library version of interpreters.
  To start with it should produce ``libnaaga`` on both Linux and OS X.

.. tag:: id:2, wip, @oierw, Milestone:FirstRelease

  The Naaga interpreter needs to compile cleanly on OS X 10.4 (Tiger) and 10.5
  (Leopard).

.. tag:: todo, @fijal, @JohnMW, @happyseaurchin, @jeffarch, @sbp, @thruflo,
         @cre8radix, @evangineer, #design, #testing, #ui, #outreach, #backend

  We need to extend PyPy so that it can create a library version of interpreters.
  To start with it should produce ``libnaaga`` on both Linux and OS X.


Optimisations
=============

.. tag:: id:3, inreview, @tav, dep:2, #foo, milestone:FirstRelease

  The ``validation.validate`` decorator should create a decorated version of the
  service function by generating the appropriate bytecode for the new function
  instead of creating it by exec-ing generated source code.

.. tag:: id:4, todo, @tav, dep:2, #foo, milestone:FirstRelease

  The ``validation.validate`` decorator should create a decorated version of the
  service function by generating the appropriate bytecode for the new function
  instead of creating it by exec-ing generated source code.


.. tag::  

  We need to extend PyPy so that it can create a library version of interpreters.
  To start with it should produce ``libnaaga`` on both Linux and OS X.


.. !! PLEASE UPDATE THIS WHENEVER YOU CREATE A NEW ITEM !!
.. latest used id: 3


http://informationarchitects.jp/designing-firefox-32/

@Sven: I’d say that it’s a URL-library, combining bookmarks (hence “Saved”), RSS
(hence “New”) and history (hence “Unread”)

@Winston: First question: Yes, tabs are still possible. 2nd question: They’re in
your history, so maybe an additional history category (”open tabs” or “last
hour”) might be useful… BTW: The idea is also that whatever library item was
selected stays selected if you open a new tab.

a way to queue up pages in a ‘to read’ category of the ‘library’. maybe this is ’surflists’?
maybe a way to would categorize pages automatically — in my case, a quick scan
of the page would put pages with “ruby” “rails”, “javascript” etc in one
category, “markets” “capitalism”, “stimulus” etc in another, and so on.

